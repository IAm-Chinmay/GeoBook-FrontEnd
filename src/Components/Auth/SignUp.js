import React, { useState, useContext } from "react";

import NavBar from "../NavBar";
import Head from "next/head";

import styles from "../../styles/auth.module.css";
import ImgPreview from "../CreatePost/ImgPreview";

import { AuthContext } from "../AuthContext";
import { useHttpClient } from "../httpHooks";

function SignUp() {
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [udesc, setUDesc] = useState("");
  const [password, setPass] = useState("");
  const [img, setImg] = useState();

  const auth = useContext(AuthContext);
  const { isLoading, showErrorMsg, showErrorModal, sendRequest, clearError } =
    useHttpClient();

  const onSubmitHandler = async (event) => {
    event.stopPropagation();
    event.preventDefault();

    try {
      const formData = new FormData();
      formData.append("username", username);
      formData.append("Udesc", udesc);
      formData.append("email", email);
      formData.append("password", password);
      formData.append("img", img);
      const responseData = await sendRequest(
        "http://localhost:5000/api/user/signup",
        "POST",
        formData
      );
      auth.login(responseData.userId, responseData.token);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <Head>
        <title>SignUp</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav
        style={{
          background: "rgba(114, 113, 113, 0.75)",
          borderBottomLeftRadius: "35px",
          borderBottomRightRadius: "35px",
          position: "sticky",
          top: 0,
        }}
      >
        <NavBar />
      </nav>
      <div className={styles.signUpMain}>
        <h1>Register your self !</h1>
        <form onSubmit={onSubmitHandler}>
          <h3>Email</h3>
          <input
            required
            type={"email"}
            onChange={(event) => {
              clearError(true);
              setEmail(event.target.value);
            }}
          />
          <h3>Username</h3>
          <input
            required
            type={"text"}
            onChange={(event) => {
              clearError(true);
              setUsername(event.target.value);
            }}
          />

          <h3>Tell me about yourself !</h3>
          <input
            required
            max={50}
            type={"text"}
            onChange={(event) => setUDesc(event.target.value)}
          />
          <div>
            <ImgPreview
              setImage={setImg}
              imgPicker={styles.imgPicker}
              postImg={styles.imgPreview}
              inputPicker={styles.inputPicker}
            />
          </div>
          <h3>Password</h3>
          <input
            required
            type={"password"}
            onChange={(event) => setPass(event.target.value)}
          />
          <div className={styles.signBtn}>
            <button type={"submit"}>SignUp</button>
          </div>
        </form>
        <div>
          {showErrorModal && (
            <h4
              style={{
                textAlign: "center",
                marginTop: "5vh",
                color: "#822222",
                fontSize: "2.5vh",
              }}
            >
              {showErrorMsg}
            </h4>
          )}
        </div>
      </div>
    </>
  );
}

export default SignUp;
