import React, { useState, useContext } from "react";

import NavBar from "../NavBar";
import Head from "next/head";

import styles from "../../styles/auth.module.css";

import { AuthContext } from "../AuthContext";
import { useHttpClient } from "../httpHooks";

import { ColorRing } from "react-loader-spinner";

function Login() {
  const [mail, setEmail] = useState("");
  const [pass, setPass] = useState("");
  const [load, setLoader] = useState(false);

  const auth = useContext(AuthContext);
  const { isLoading, showErrorMsg, showErrorModal, sendRequest, clearError } =
    useHttpClient();

  const submitHandler = async (event) => {
    setLoader(true);
    event.preventDefault();
    event.stopPropagation();
    try {
      const responseData = await sendRequest(
        "http://localhost:5000/api/user/login",
        "POST",
        JSON.stringify({
          email: mail,
          password: pass,
        }),
        {
          "Content-Type": "application/json",
        }
      );
      console.log(responseData);
      auth.login(responseData.userId, responseData.token);
      setLoader(false);
    } catch (error) {}
  };

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav
        style={{
          background: "rgba(114, 113, 113, 0.75)",
          borderBottomLeftRadius: "35px",
          borderBottomRightRadius: "35px",
          position: "sticky",
          top: 0,
        }}
      >
        <NavBar />
      </nav>
      {load && (
        <div
          style={{
            position: "fixed",
            top: "40vh",
            left: "80vh",
          }}
        >
          <ColorRing
            visible={true}
            height="200"
            width="200"
            ariaLabel="blocks-loading"
            wrapperStyle={{}}
            wrapperClass="blocks-wrapper"
            colors={["#f59547", "#f55347", "#54b53c", "#3c80b5", "#9a45d6"]}
          />
        </div>
      )}
      <div className={styles.logInMain}>
        <h1>Welcome Back !</h1>
        <form onSubmit={submitHandler}>
          <h3>Email</h3>
          <input
            type={"email"}
            onChange={(event) => {
              clearError(true);
              setEmail(event.target.value);
            }}
            required
          />
          <h3>Password</h3>
          <input
            type={"password"}
            onChange={(event) => {
              clearError(true);
              setPass(event.target.value);
            }}
            required
          />
          <div className={styles.signBtn}>
            <button type={"submit"}>LogIn</button>
          </div>
        </form>
        {showErrorModal && (
          <h4
            style={{
              textAlign: "center",
              marginTop: "5vh",
              color: "#822222",
              fontSize: "2.5vh",
            }}
          >
            {showErrorMsg}
          </h4>
        )}
      </div>
    </>
  );
}

export default Login;
